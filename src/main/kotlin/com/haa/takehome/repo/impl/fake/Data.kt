package com.haa.takehome.repo.impl.fake

object Data {
    val countries = listOf(
        DataCountry("AF", "Africa", "AO", "Angola"),
        DataCountry("AF", "Africa", "BF", "Burkina Faso"),
        DataCountry("AF", "Africa", "BI", "Burundi"),
        DataCountry("AF", "Africa", "BJ", "Benin"),
        DataCountry("AF", "Africa", "BW", "Botswana"),
        DataCountry("AF", "Africa", "CD", "Democratic Republic of the Congo"),
        DataCountry("AF", "Africa", "CF", "Central African Republic"),
        DataCountry("AF", "Africa", "CG", "Republic of the Congo"),
        DataCountry("AF", "Africa", "CI", "Ivory Coast"),
        DataCountry("AF", "Africa", "CM", "Cameroon"),
        DataCountry("AF", "Africa", "CV", "Cape Verde"),
        DataCountry("AF", "Africa", "DJ", "Djibouti"),
        DataCountry("AF", "Africa", "DZ", "Algeria"),
        DataCountry("AF", "Africa", "EG", "Egypt"),
        DataCountry("AF", "Africa", "EH", "Western Sahara"),
        DataCountry("AF", "Africa", "ER", "Eritrea"),
        DataCountry("AF", "Africa", "ET", "Ethiopia"),
        DataCountry("AF", "Africa", "GA", "Gabon"),
        DataCountry("AF", "Africa", "GH", "Ghana"),
        DataCountry("AF", "Africa", "GM", "Gambia"),
        DataCountry("AF", "Africa", "GN", "Guinea"),
        DataCountry("AF", "Africa", "GQ", "Equatorial Guinea"),
        DataCountry("AF", "Africa", "GW", "Guinea-Bissau"),
        DataCountry("AF", "Africa", "KE", "Kenya"),
        DataCountry("AF", "Africa", "KM", "Comoros"),
        DataCountry("AF", "Africa", "LR", "Liberia"),
        DataCountry("AF", "Africa", "LS", "Lesotho"),
        DataCountry("AF", "Africa", "LY", "Libya"),
        DataCountry("AF", "Africa", "MA", "Morocco"),
        DataCountry("AF", "Africa", "MG", "Madagascar"),
        DataCountry("AF", "Africa", "ML", "Mali"),
        DataCountry("AF", "Africa", "MR", "Mauritania"),
        DataCountry("AF", "Africa", "MU", "Mauritius"),
        DataCountry("AF", "Africa", "MW", "Malawi"),
        DataCountry("AF", "Africa", "MZ", "Mozambique"),
        DataCountry("AF", "Africa", "NA", "Namibia"),
        DataCountry("AF", "Africa", "NE", "Niger"),
        DataCountry("AF", "Africa", "NG", "Nigeria"),
        DataCountry("AF", "Africa", "RE", "Réunion"),
        DataCountry("AF", "Africa", "RW", "Rwanda"),
        DataCountry("AF", "Africa", "SC", "Seychelles"),
        DataCountry("AF", "Africa", "SD", "Sudan"),
        DataCountry("AF", "Africa", "SH", "Saint Helena"),
        DataCountry("AF", "Africa", "SL", "Sierra Leone"),
        DataCountry("AF", "Africa", "SN", "Senegal"),
        DataCountry("AF", "Africa", "SO", "Somalia"),
        DataCountry("AF", "Africa", "SS", "South Sudan"),
        DataCountry("AF", "Africa", "ST", "São Tomé and Príncipe"),
        DataCountry("AF", "Africa", "SZ", "Swaziland"),
        DataCountry("AF", "Africa", "TD", "Chad"),
        DataCountry("AF", "Africa", "TG", "Togo"),
        DataCountry("AF", "Africa", "TN", "Tunisia"),
        DataCountry("AF", "Africa", "TZ", "Tanzania"),
        DataCountry("AF", "Africa", "UG", "Uganda"),
        DataCountry("AF", "Africa", "YT", "Mayotte"),
        DataCountry("AF", "Africa", "ZA", "South Africa"),
        DataCountry("AF", "Africa", "ZM", "Zambia"),
        DataCountry("AF", "Africa", "ZW", "Zimbabwe"),
        DataCountry("AN", "Antarctica", "AQ", "Antarctica"),
        DataCountry("AN", "Antarctica", "BV", "Bouvet Island"),
        DataCountry("AN", "Antarctica", "GS", "South Georgia and the South Sandwich Islands"),
        DataCountry("AN", "Antarctica", "HM", "Heard Island and McDonald Islands"),
        DataCountry("AN", "Antarctica", "TF", "French Southern Territories"),
        DataCountry("AS", "Asia", "AE", "United Arab Emirates"),
        DataCountry("AS", "Asia", "AF", "Afghanistan"),
        DataCountry("AS", "Asia", "AM", "Armenia"),
        DataCountry("AS", "Asia", "AZ", "Azerbaijan"),
        DataCountry("AS", "Asia", "BD", "Bangladesh"),
        DataCountry("AS", "Asia", "BH", "Bahrain"),
        DataCountry("AS", "Asia", "BN", "Brunei"),
        DataCountry("AS", "Asia", "BT", "Bhutan"),
        DataCountry("AS", "Asia", "CC", "Cocos [Keeling] Islands"),
        DataCountry("AS", "Asia", "CN", "China"),
        DataCountry("AS", "Asia", "CX", "Christmas Island"),
        DataCountry("AS", "Asia", "GE", "Georgia"),
        DataCountry("AS", "Asia", "HK", "Hong Kong"),
        DataCountry("AS", "Asia", "ID", "Indonesia"),
        DataCountry("AS", "Asia", "IL", "Israel"),
        DataCountry("AS", "Asia", "IN", "India"),
        DataCountry("AS", "Asia", "IO", "British Indian Ocean Territory"),
        DataCountry("AS", "Asia", "IQ", "Iraq"),
        DataCountry("AS", "Asia", "IR", "Iran"),
        DataCountry("AS", "Asia", "JO", "Jordan"),
        DataCountry("AS", "Asia", "JP", "Japan"),
        DataCountry("AS", "Asia", "KG", "Kyrgyzstan"),
        DataCountry("AS", "Asia", "KH", "Cambodia"),
        DataCountry("AS", "Asia", "KP", "North Korea"),
        DataCountry("AS", "Asia", "KR", "South Korea"),
        DataCountry("AS", "Asia", "KW", "Kuwait"),
        DataCountry("AS", "Asia", "KZ", "Kazakhstan"),
        DataCountry("AS", "Asia", "LA", "Laos"),
        DataCountry("AS", "Asia", "LB", "Lebanon"),
        DataCountry("AS", "Asia", "LK", "Sri Lanka"),
        DataCountry("AS", "Asia", "MM", "Myanmar [Burma]"),
        DataCountry("AS", "Asia", "MN", "Mongolia"),
        DataCountry("AS", "Asia", "MO", "Macao"),
        DataCountry("AS", "Asia", "MV", "Maldives"),
        DataCountry("AS", "Asia", "MY", "Malaysia"),
        DataCountry("AS", "Asia", "NP", "Nepal"),
        DataCountry("AS", "Asia", "OM", "Oman"),
        DataCountry("AS", "Asia", "PH", "Philippines"),
        DataCountry("AS", "Asia", "PK", "Pakistan"),
        DataCountry("AS", "Asia", "PS", "Palestine"),
        DataCountry("AS", "Asia", "QA", "Qatar"),
        DataCountry("AS", "Asia", "SA", "Saudi Arabia"),
        DataCountry("AS", "Asia", "SG", "Singapore"),
        DataCountry("AS", "Asia", "SY", "Syria"),
        DataCountry("AS", "Asia", "TH", "Thailand"),
        DataCountry("AS", "Asia", "TJ", "Tajikistan"),
        DataCountry("AS", "Asia", "TM", "Turkmenistan"),
        DataCountry("AS", "Asia", "TR", "Turkey"),
        DataCountry("AS", "Asia", "TW", "Taiwan"),
        DataCountry("AS", "Asia", "UZ", "Uzbekistan"),
        DataCountry("AS", "Asia", "VN", "Vietnam"),
        DataCountry("AS", "Asia", "YE", "Yemen"),
        DataCountry("EU", "Europe", "AD", "Andorra"),
        DataCountry("EU", "Europe", "AL", "Albania"),
        DataCountry("EU", "Europe", "AT", "Austria"),
        DataCountry("EU", "Europe", "AX", "Åland"),
        DataCountry("EU", "Europe", "BA", "Bosnia and Herzegovina"),
        DataCountry("EU", "Europe", "BE", "Belgium"),
        DataCountry("EU", "Europe", "BG", "Bulgaria"),
        DataCountry("EU", "Europe", "BY", "Belarus"),
        DataCountry("EU", "Europe", "CH", "Switzerland"),
        DataCountry("EU", "Europe", "CY", "Cyprus"),
        DataCountry("EU", "Europe", "CZ", "Czech Republic"),
        DataCountry("EU", "Europe", "DE", "Germany"),
        DataCountry("EU", "Europe", "DK", "Denmark"),
        DataCountry("EU", "Europe", "EE", "Estonia"),
        DataCountry("EU", "Europe", "ES", "Spain"),
        DataCountry("EU", "Europe", "FI", "Finland"),
        DataCountry("EU", "Europe", "FO", "Faroe Islands"),
        DataCountry("EU", "Europe", "FR", "France"),
        DataCountry("EU", "Europe", "GB", "United Kingdom"),
        DataCountry("EU", "Europe", "GG", "Guernsey"),
        DataCountry("EU", "Europe", "GI", "Gibraltar"),
        DataCountry("EU", "Europe", "GR", "Greece"),
        DataCountry("EU", "Europe", "HR", "Croatia"),
        DataCountry("EU", "Europe", "HU", "Hungary"),
        DataCountry("EU", "Europe", "IE", "Ireland"),
        DataCountry("EU", "Europe", "IM", "Isle of Man"),
        DataCountry("EU", "Europe", "IS", "Iceland"),
        DataCountry("EU", "Europe", "IT", "Italy"),
        DataCountry("EU", "Europe", "JE", "Jersey"),
        DataCountry("EU", "Europe", "LI", "Liechtenstein"),
        DataCountry("EU", "Europe", "LT", "Lithuania"),
        DataCountry("EU", "Europe", "LU", "Luxembourg"),
        DataCountry("EU", "Europe", "LV", "Latvia"),
        DataCountry("EU", "Europe", "MC", "Monaco"),
        DataCountry("EU", "Europe", "MD", "Moldova"),
        DataCountry("EU", "Europe", "ME", "Montenegro"),
        DataCountry("EU", "Europe", "MK", "North Macedonia"),
        DataCountry("EU", "Europe", "MT", "Malta"),
        DataCountry("EU", "Europe", "NL", "Netherlands"),
        DataCountry("EU", "Europe", "NO", "Norway"),
        DataCountry("EU", "Europe", "PL", "Poland"),
        DataCountry("EU", "Europe", "PT", "Portugal"),
        DataCountry("EU", "Europe", "RO", "Romania"),
        DataCountry("EU", "Europe", "RS", "Serbia"),
        DataCountry("EU", "Europe", "RU", "Russia"),
        DataCountry("EU", "Europe", "SE", "Sweden"),
        DataCountry("EU", "Europe", "SI", "Slovenia"),
        DataCountry("EU", "Europe", "SJ", "Svalbard and Jan Mayen"),
        DataCountry("EU", "Europe", "SK", "Slovakia"),
        DataCountry("EU", "Europe", "SM", "San Marino"),
        DataCountry("EU", "Europe", "UA", "Ukraine"),
        DataCountry("EU", "Europe", "VA", "Vatican City"),
        DataCountry("EU", "Europe", "XK", "Kosovo"),
        DataCountry("NA", "North America", "AG", "Antigua and Barbuda"),
        DataCountry("NA", "North America", "AI", "Anguilla"),
        DataCountry("NA", "North America", "AW", "Aruba"),
        DataCountry("NA", "North America", "BB", "Barbados"),
        DataCountry("NA", "North America", "BL", "Saint Barthélemy"),
        DataCountry("NA", "North America", "BM", "Bermuda"),
        DataCountry("NA", "North America", "BQ", "Bonaire"),
        DataCountry("NA", "North America", "BS", "Bahamas"),
        DataCountry("NA", "North America", "BZ", "Belize"),
        DataCountry("NA", "North America", "CA", "Canada"),
        DataCountry("NA", "North America", "CR", "Costa Rica"),
        DataCountry("NA", "North America", "CU", "Cuba"),
        DataCountry("NA", "North America", "CW", "Curacao"),
        DataCountry("NA", "North America", "DM", "Dominica"),
        DataCountry("NA", "North America", "DO", "Dominican Republic"),
        DataCountry("NA", "North America", "GD", "Grenada"),
        DataCountry("NA", "North America", "GL", "Greenland"),
        DataCountry("NA", "North America", "GP", "Guadeloupe"),
        DataCountry("NA", "North America", "GT", "Guatemala"),
        DataCountry("NA", "North America", "HN", "Honduras"),
        DataCountry("NA", "North America", "HT", "Haiti"),
        DataCountry("NA", "North America", "JM", "Jamaica"),
        DataCountry("NA", "North America", "KN", "Saint Kitts and Nevis"),
        DataCountry("NA", "North America", "KY", "Cayman Islands"),
        DataCountry("NA", "North America", "LC", "Saint Lucia"),
        DataCountry("NA", "North America", "MF", "Saint Martin"),
        DataCountry("NA", "North America", "MQ", "Martinique"),
        DataCountry("NA", "North America", "MS", "Montserrat"),
        DataCountry("NA", "North America", "MX", "Mexico"),
        DataCountry("NA", "North America", "NI", "Nicaragua"),
        DataCountry("NA", "North America", "PA", "Panama"),
        DataCountry("NA", "North America", "PM", "Saint Pierre and Miquelon"),
        DataCountry("NA", "North America", "PR", "Puerto Rico"),
        DataCountry("NA", "North America", "SV", "El Salvador"),
        DataCountry("NA", "North America", "SX", "Sint Maarten"),
        DataCountry("NA", "North America", "TC", "Turks and Caicos Islands"),
        DataCountry("NA", "North America", "TT", "Trinidad and Tobago"),
        DataCountry("NA", "North America", "US", "United States"),
        DataCountry("NA", "North America", "VC", "Saint Vincent and the Grenadines"),
        DataCountry("NA", "North America", "VG", "British Virgin Islands"),
        DataCountry("NA", "North America", "VI", "U.S. Virgin Islands"),
        DataCountry("OC", "Oceania", "AS", "American Samoa"),
        DataCountry("OC", "Oceania", "AU", "Australia"),
        DataCountry("OC", "Oceania", "CK", "Cook Islands"),
        DataCountry("OC", "Oceania", "FJ", "Fiji"),
        DataCountry("OC", "Oceania", "FM", "Micronesia"),
        DataCountry("OC", "Oceania", "GU", "Guam"),
        DataCountry("OC", "Oceania", "KI", "Kiribati"),
        DataCountry("OC", "Oceania", "MH", "Marshall Islands"),
        DataCountry("OC", "Oceania", "MP", "Northern Mariana Islands"),
        DataCountry("OC", "Oceania", "NC", "New Caledonia"),
        DataCountry("OC", "Oceania", "NF", "Norfolk Island"),
        DataCountry("OC", "Oceania", "NR", "Nauru"),
        DataCountry("OC", "Oceania", "NU", "Niue"),
        DataCountry("OC", "Oceania", "NZ", "New Zealand"),
        DataCountry("OC", "Oceania", "PF", "French Polynesia"),
        DataCountry("OC", "Oceania", "PG", "Papua New Guinea"),
        DataCountry("OC", "Oceania", "PN", "Pitcairn Islands"),
        DataCountry("OC", "Oceania", "PW", "Palau"),
        DataCountry("OC", "Oceania", "SB", "Solomon Islands"),
        DataCountry("OC", "Oceania", "TK", "Tokelau"),
        DataCountry("OC", "Oceania", "TL", "East Timor"),
        DataCountry("OC", "Oceania", "TO", "Tonga"),
        DataCountry("OC", "Oceania", "TV", "Tuvalu"),
        DataCountry("OC", "Oceania", "UM", "U.S. Minor Outlying Islands"),
        DataCountry("OC", "Oceania", "VU", "Vanuatu"),
        DataCountry("OC", "Oceania", "WF", "Wallis and Futuna"),
        DataCountry("OC", "Oceania", "WS", "Samoa"),
        DataCountry("SA", "South America", "AR", "Argentina"),
        DataCountry("SA", "South America", "BO", "Bolivia"),
        DataCountry("SA", "South America", "BR", "Brazil"),
        DataCountry("SA", "South America", "CL", "Chile"),
        DataCountry("SA", "South America", "CO", "Colombia"),
        DataCountry("SA", "South America", "EC", "Ecuador"),
        DataCountry("SA", "South America", "FK", "Falkland Islands"),
        DataCountry("SA", "South America", "GF", "French Guiana"),
        DataCountry("SA", "South America", "GY", "Guyana"),
        DataCountry("SA", "South America", "PE", "Peru"),
        DataCountry("SA", "South America", "PY", "Paraguay"),
        DataCountry("SA", "South America", "SR", "Suriname"),
        DataCountry("SA", "South America", "UY", "Uruguay"),
        DataCountry("SA", "South America", "VE", "Venezuela"))

}
